{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","submit","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","target","GifGridItem","id","title","src","className","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","images","downsized_medium","console","log","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","Fragment","img","key","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EAhCK,SAAC,GAA8B,EAA5BC,OAA6B,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAqBjD,OACE,0BAAMC,SAfa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAWd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAvBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCIZG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,yBAAKC,UAAU,0CACb,yBAAKD,IAAKA,IACV,2BAAID,K,uBCNGG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACN,mCACTC,EAFe,iDAEiCC,UAAUH,GAF3C,6BACN,oCADM,SAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLf,GAAIe,EAAKf,GACTC,MAAOc,EAAKd,MACZC,IAAKa,EAAKC,OAAOC,iBAAiBV,QAItCW,QAAQC,IAAI,OAAQN,GAdC,kBAedA,GAfc,4CAAH,sDCkBLO,EAbC,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdnB,mBAAS,CACjC0B,KAAM,GACNS,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAUxC,OAJAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CAAEX,KAAMc,EAAML,SAAS,SAC9D,CAAChB,IAEGiB,EDR2BK,CAAatB,GAAjCW,EADkB,EACxBJ,KAAcS,EADU,EACVA,QACtB,OACE,kBAAC,IAAMO,SAAP,KACE,wBAAIzB,UAAU,qCAAqCE,GAClDgB,GAAW,uBAAGlB,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aACZa,EAAOF,KAAI,SAAAe,GAAG,OAAI,kBAAC,EAAD,eAAaC,IAAKD,EAAI7B,IAAQ6B,UEe1CE,EAvBM,WAAO,IAAD,EACW7C,mBAAS,CAAC,WAAY,YAAa,WAD9C,mBAClB8C,EADkB,KACN/C,EADM,KAOzB,OACE,6BACE,4CACA,kBAAC,EAAD,CAAaD,OAPG,SAACY,GACnBX,EAAc,GAAD,mBAAK+C,GAAL,CAAiBpC,MAMMX,cAAeA,IACjD,6BACA,4BAEI+C,EAAWlB,KAAI,SAAAmB,GAAG,OAChB,kBAAC,EAAD,CAASH,IAAKG,EAAK5B,SAAU4B,U,MCdzCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f8df19ab.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = ({ submit, setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(prev => [inputValue, ...prev]);\r\n      setInputValue('');\r\n    }\r\n    // submit(inputValue);\r\n  };\r\n\r\n  CategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CategoryAdd;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, src }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={src} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const apiKey = 'Bm37KZ4G7a2QOBjbcEhTUrLFFVnaDJCn';\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map(item => {\r\n    return {\r\n      id: item.id,\r\n      title: item.title,\r\n      src: item.images.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  console.log('data', gifs);\r\n  return gifs;\r\n};","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <React.Fragment>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map(img => <GifGridItem key={img.id} {...img}></GifGridItem>)}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => setState({ data: imgs, loading: false }));\r\n  }, [category]);\r\n\r\n  return state;\r\n};","import React, {useState} from 'react';\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Iron Man', 'Megan Fox', 'Thanos']);\r\n\r\n  const addCategory = (value) => {\r\n    setCategories([...categories, value ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <CategoryAdd submit={addCategory} setCategories={setCategories}/>\r\n      <hr/>\r\n      <ol>\r\n        { \r\n          categories.map(cat => \r\n            <GifGrid key={cat} category={cat}></GifGrid>\r\n          )\r\n        }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}